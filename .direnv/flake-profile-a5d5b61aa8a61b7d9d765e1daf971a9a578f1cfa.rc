unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AR_FOR_TARGET='ar'
export AR_FOR_TARGET
AS='as'
export AS
AS_FOR_TARGET='as'
export AS_FOR_TARGET
BASH='/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin/bash'
CC='clang'
export CC
CC_FOR_TARGET='clang'
export CC_FOR_TARGET
CONFIG_SHELL='/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin/bash'
export CONFIG_SHELL
CXX='clang++'
export CXX
CXX_FOR_TARGET='clang++'
export CXX_FOR_TARGET
DEVELOPER_DIR='/nix/store/w41ks2baj649algkjnbh9746cprrnr1k-apple-sdk-11.3'
export DEVELOPER_DIR
HOSTTYPE='aarch64'
HOST_PATH='/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/bin:/nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev/bin:/nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev/bin:/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/bin:/nix/store/5p3zbig9h79ha3b8hdg60858pn1z7sm0-llvm-16.0.6/bin:/nix/store/qa6h82fvwcb8d375h95cmv89699yv1qn-llvm-binutils-wrapper-16.0.6/bin:/nix/store/ldk6y391mx925x8f9vqikvd39adims1g-clang-wrapper-16.0.6/bin:/nix/store/7x69birl5vvz3kp47hnlnlsnx4xnmcxr-cctools-binutils-darwin-wrapper-1010.6/bin:/nix/store/b96n0hqpih5rb7cxw7cp8d1bwpq3bah5-ghc-9.12.2/bin:/nix/store/y0hk9i00q7i6507mci02vxpw6czqlsnd-haskell-language-server-2.10.0.0/bin:/nix/store/6xzlj57ydrl11yprj5973kzs1r4y7sfs-aeson-pretty-0.8.10/bin:/nix/store/ky9gpqfmd0kj3dmj816bs0sv06bk3lnz-apply-refact-0.15.0.0/bin:/nix/store/2cxyww0g6lz1x8vw5ibdbyj76nafm7s9-cabal-add-0.1/bin:/nix/store/xgmravnisfj8x003r5zdjl7qkkl32fbm-fourmolu-0.18.0.0/bin:/nix/store/alr6b5byv4lx0qysq9h66axpxrbhac3f-ghc-lib-parser-ex-9.12.0.0/bin:/nix/store/cgwv97q98bw2apqlpj9q4msk4vvxbv1l-ghcide-2.10.0.0/bin:/nix/store/h7zf4gfzxdrjjkl51hpsfmahfrzxa0yr-constraints-extras-0.4.0.2/bin:/nix/store/dz0mbn3biqry98b8ya3bqq8s95jipbps-hie-bios-0.14.0/bin:/nix/store/ipkbn99dg81v3bms9xy7ks1sy4z648k7-hiedb-0.6.0.2/bin:/nix/store/ln11lw6p9khzvvm8c9lsq6i95bdqkv2x-lsp-types-2.3.0.1/bin:/nix/store/yf16b99x9s1k7iwmr69bb1va07lylxsz-implicit-hie-0.1.4.0/bin:/nix/store/sa97033r6i5kg1i32d0p3rqmaffaqxrs-hlint-3.10/bin:/nix/store/gvi7pmkxnkqv9k6rvh7iypxnh5vgkjbb-cpphs-1.20.9.1/bin:/nix/store/bqv7l2gdznl9rg8y9xchz5qzl21lyrvc-hscolour-1.25/bin:/nix/store/37sr69pmfvaavslgkgfz4j6p56rap3wb-ormolu-0.8.0.0/bin:/nix/store/9izp8zh9sfyifcz76c6ci3n2v9qyfmc6-shake-0.19.8/bin:/nix/store/jbpyp7mx51n492y6gsp0a9ml6dh449qk-stan-0.2.0.0/bin:/nix/store/fkm8j66iwpkh0619picpkrh0b6p9zy6q-extensions-0.1.0.3/bin:/nix/store/72nw8idlz1kss7sdkyymib5hbbx6992a-pretty-simple-4.1.3.0/bin:/nix/store/mfp90dqhjamsckqmv8ny5lkg3xdnb1ml-hoogle-unstable-2024-07-29/bin:/nix/store/9l0i2ax0gzhfxldfwyca6lyg0yh4y35a-ghci-dap-0.0.25.0/bin:/nix/store/q2nn3dq8nyxaqngmy2s9klb2qiyzfxfx-ghc-9.8.4/bin:/nix/store/rn7yfrfdabpz7sp0fwp31d3aj59fk011-haskell-debug-adapter-0.0.42.0/bin:/nix/store/hiia332kp1bd5418sza831vwrfq69wqi-fsnotify-0.4.2.0/bin:/nix/store/0l157sg7zfmah0azrcam2cqp2qiywcam-hie-bios-0.14.0/bin:/nix/store/wnix6l9mmsalxdv5mz2xq4c173am35k4-fast-tags-2.0.3/bin:/nix/store/mznfcmzvwpx3zymzpqd9mbwd237nii18-alex-3.5.3.0/bin:/nix/store/15p0af2xacrpqrvw4dj9a22aw2385zrm-happy-2.0.2/bin:/nix/store/rk7kswxgh2cbddk5zx2r4ip00isxn8gg-cabal-fmt-0.1.12-bin/bin:/nix/store/w4hzkhd6203fcli3w0al0rnr317bhx1h-fourmolu-0.15.0.0/bin:/nix/store/64r4kfhjlz6h8qwq0j4iby8k84lcx7cf-cabal-install-3.14.2.0/bin:/nix/store/nv1wlbn3im8ny7bbfpmsq79n2dp6xrm3-hlint-3.8/bin:/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/bin:/nix/store/d72z8b7fvvcin2p84x7h5s0abkggplzc-coreutils-9.7/bin:/nix/store/9gfvy5dd2kp4xf7m3k5gm79dx1mja2lj-findutils-4.10.0/bin:/nix/store/wkgmvs8kl4a0xkr1a1cs9m3hkn07zh5f-diffutils-3.12/bin:/nix/store/3p81h24g11jfcdd7ifql71lr5mjag102-gnused-4.9/bin:/nix/store/6rdq4hg48bmqy7d8da38niai5ngg1x1s-gnugrep-3.11/bin:/nix/store/ip1m0zq8r95z6wbhk6l0k32anw8h4kc7-gawk-5.3.2/bin:/nix/store/0pfs35y6gzcd3bxiybl7vih5yfyv8bcl-gnutar-1.35/bin:/nix/store/29p1y63i1dxqspyrfima6s5ay6525zlf-gzip-1.14/bin:/nix/store/7dvq6aba13kqkvj7ay850s4q806p33vw-bzip2-1.0.8-bin/bin:/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/bin:/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin:/nix/store/n1i5qvy1jcblq3s1ilnmc83yqcl0l8vk-patch-2.7.6/bin:/nix/store/rmn4csq2fk0scys2d0v6hgkd3yv5fkxj-xz-5.8.1-bin/bin:/nix/store/bpibjj5f5z5p73afivj0ljzbpdgnjbi0-file-5.46/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
LD_DYLD_PATH='/usr/lib/dyld'
export LD_DYLD_PATH
LD_FOR_TARGET='ld'
export LD_FOR_TARGET
LINENO='76'
MACHTYPE='aarch64-apple-darwin24.4.0'
MACOSX_DEPLOYMENT_TARGET='11.3'
export MACOSX_DEPLOYMENT_TARGET
NIX_APPLE_SDK_VERSION='110300'
export NIX_APPLE_SDK_VERSION
NIX_BINTOOLS='/nix/store/k8q0n8py04l07glgsfmvqqyqazxf04mb-cctools-binutils-darwin-wrapper-1010.6'
export NIX_BINTOOLS
NIX_BINTOOLS_FOR_TARGET='/nix/store/7x69birl5vvz3kp47hnlnlsnx4xnmcxr-cctools-binutils-darwin-wrapper-1010.6'
export NIX_BINTOOLS_FOR_TARGET
NIX_BINTOOLS_WRAPPER_TARGET_HOST_arm64_apple_darwin='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_arm64_apple_darwin
NIX_BINTOOLS_WRAPPER_TARGET_TARGET_arm64_apple_darwin='1'
export NIX_BINTOOLS_WRAPPER_TARGET_TARGET_arm64_apple_darwin
NIX_BUILD_CORES='16'
export NIX_BUILD_CORES
NIX_CC='/nix/store/cvhbqa01i5yy7xmmpqp1hbnvq7kpvgsx-clang-wrapper-19.1.7'
export NIX_CC
NIX_CC_FOR_TARGET='/nix/store/ldk6y391mx925x8f9vqikvd39adims1g-clang-wrapper-16.0.6'
export NIX_CC_FOR_TARGET
NIX_CC_WRAPPER_TARGET_HOST_arm64_apple_darwin='1'
export NIX_CC_WRAPPER_TARGET_HOST_arm64_apple_darwin
NIX_CC_WRAPPER_TARGET_TARGET_arm64_apple_darwin='1'
export NIX_CC_WRAPPER_TARGET_TARGET_arm64_apple_darwin
NIX_CFLAGS_COMPILE=' -frandom-seed=1qdfmxlf8j -isystem /nix/store/rfng4494hxqxjgsamkcd01mzfdp2fwlh-libcxx-19.1.7-dev/include -isystem /nix/store/sqmzi81xlsf4gk287rnjk7rj4624zy84-compiler-rt-libc-19.1.7-dev/include -isystem /nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/include -isystem /nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev/include -isystem /nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev/include -isystem /nix/store/kslccv8lpcq68f4jfppsx4d0zxmjcmrf-zlib-1.3.1-dev/include -isystem /nix/store/m3l5s4b1v7l2hs9dm73i76cx6acry77k-libiconv-109-dev/include -isystem /nix/store/l676klylkdmxgx3dff5qx6r6j596lpvx-libresolv-83-dev/include -isystem /nix/store/zn828prnxazgd5xaqhzn9f8dxfvadkgg-libsbuf-14.1.0-dev/include -isystem /nix/store/zgrs0am3a5avl3jmjsjlph8d4r17wq6j-cups-headers-2.4.11/include -isystem /nix/store/rsli1jzy7fb6g1gxqlshs7xln5mlkbd5-libcxx-16.0.6-dev/include -isystem /nix/store/q06j84vr1sfvf215as7xqzcflah5i764-compiler-rt-libc-16.0.6-dev/include -isystem /nix/store/rfng4494hxqxjgsamkcd01mzfdp2fwlh-libcxx-19.1.7-dev/include -isystem /nix/store/sqmzi81xlsf4gk287rnjk7rj4624zy84-compiler-rt-libc-19.1.7-dev/include -isystem /nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/include -isystem /nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev/include -isystem /nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev/include -isystem /nix/store/kslccv8lpcq68f4jfppsx4d0zxmjcmrf-zlib-1.3.1-dev/include -isystem /nix/store/m3l5s4b1v7l2hs9dm73i76cx6acry77k-libiconv-109-dev/include -isystem /nix/store/l676klylkdmxgx3dff5qx6r6j596lpvx-libresolv-83-dev/include -isystem /nix/store/zn828prnxazgd5xaqhzn9f8dxfvadkgg-libsbuf-14.1.0-dev/include -isystem /nix/store/zgrs0am3a5avl3jmjsjlph8d4r17wq6j-cups-headers-2.4.11/include -isystem /nix/store/rsli1jzy7fb6g1gxqlshs7xln5mlkbd5-libcxx-16.0.6-dev/include -isystem /nix/store/q06j84vr1sfvf215as7xqzcflah5i764-compiler-rt-libc-16.0.6-dev/include'
export NIX_CFLAGS_COMPILE
NIX_CFLAGS_COMPILE_FOR_TARGET=' -isystem /nix/store/rfng4494hxqxjgsamkcd01mzfdp2fwlh-libcxx-19.1.7-dev/include -isystem /nix/store/sqmzi81xlsf4gk287rnjk7rj4624zy84-compiler-rt-libc-19.1.7-dev/include -isystem /nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/include -isystem /nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev/include -isystem /nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev/include -isystem /nix/store/kslccv8lpcq68f4jfppsx4d0zxmjcmrf-zlib-1.3.1-dev/include -isystem /nix/store/m3l5s4b1v7l2hs9dm73i76cx6acry77k-libiconv-109-dev/include -isystem /nix/store/l676klylkdmxgx3dff5qx6r6j596lpvx-libresolv-83-dev/include -isystem /nix/store/zn828prnxazgd5xaqhzn9f8dxfvadkgg-libsbuf-14.1.0-dev/include -isystem /nix/store/zgrs0am3a5avl3jmjsjlph8d4r17wq6j-cups-headers-2.4.11/include -isystem /nix/store/rsli1jzy7fb6g1gxqlshs7xln5mlkbd5-libcxx-16.0.6-dev/include -isystem /nix/store/q06j84vr1sfvf215as7xqzcflah5i764-compiler-rt-libc-16.0.6-dev/include'
export NIX_CFLAGS_COMPILE_FOR_TARGET
NIX_DONT_SET_RPATH='1'
export NIX_DONT_SET_RPATH
NIX_DONT_SET_RPATH_FOR_BUILD='1'
export NIX_DONT_SET_RPATH_FOR_BUILD
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='bindnow format fortify fortify3 pic relro stackclashprotection stackprotector strictoverflow zerocallusedregs'
export NIX_HARDENING_ENABLE
NIX_IGNORE_LD_THROUGH_GCC='1'
export NIX_IGNORE_LD_THROUGH_GCC
NIX_LDFLAGS=' -L/nix/store/xppzbf3fssn7g35ixgzifkwj54x419n5-libcxx-19.1.7/lib -L/nix/store/zqc178w2vh4lkxmy3znl5s2xl7d401nr-compiler-rt-libc-19.1.7/lib -L/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/lib -L/nix/store/nvss2yn25aqrsri04bxj6izw2gwb65fy-zlib-1.3.1/lib -L/nix/store/1y7akdc37r23rhnzkjl97pgk2hljpbka-llvm-16.0.6-lib/lib -L/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/lib -L/nix/store/xdp9yf1r58jzfw1rh68qdhp0d923l07w-libresolv-83/lib -L/nix/store/w2gmrz3ki4lqwb0gw95bjsrwlhknq8ks-libsbuf-14.1.0/lib -L/nix/store/jmq7mr51dql3w8y26kzf4j1s62k6mfww-libutil-72/lib -L/nix/store/iwf38gi3414279qjycnxccylgshfwr95-libcxx-16.0.6/lib -L/nix/store/1qcda50x3ph9md99yx876mq5lkzaq3wk-compiler-rt-libc-16.0.6/lib -L/nix/store/9yhjz5n1j4m810q9hqjl3czs2rhvglq1-libffi-39/lib -L/nix/store/v3l2cvzc07qvgfb8647ib3yp7rwcdyk3-gmp-with-cxx-6.3.0/lib -L/nix/store/xppzbf3fssn7g35ixgzifkwj54x419n5-libcxx-19.1.7/lib -L/nix/store/zqc178w2vh4lkxmy3znl5s2xl7d401nr-compiler-rt-libc-19.1.7/lib -L/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/lib -L/nix/store/nvss2yn25aqrsri04bxj6izw2gwb65fy-zlib-1.3.1/lib -L/nix/store/1y7akdc37r23rhnzkjl97pgk2hljpbka-llvm-16.0.6-lib/lib -L/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/lib -L/nix/store/xdp9yf1r58jzfw1rh68qdhp0d923l07w-libresolv-83/lib -L/nix/store/w2gmrz3ki4lqwb0gw95bjsrwlhknq8ks-libsbuf-14.1.0/lib -L/nix/store/jmq7mr51dql3w8y26kzf4j1s62k6mfww-libutil-72/lib -L/nix/store/iwf38gi3414279qjycnxccylgshfwr95-libcxx-16.0.6/lib -L/nix/store/1qcda50x3ph9md99yx876mq5lkzaq3wk-compiler-rt-libc-16.0.6/lib -L/nix/store/9yhjz5n1j4m810q9hqjl3czs2rhvglq1-libffi-39/lib -L/nix/store/v3l2cvzc07qvgfb8647ib3yp7rwcdyk3-gmp-with-cxx-6.3.0/lib'
export NIX_LDFLAGS
NIX_LDFLAGS_FOR_TARGET=' -L/nix/store/xppzbf3fssn7g35ixgzifkwj54x419n5-libcxx-19.1.7/lib -L/nix/store/xppzbf3fssn7g35ixgzifkwj54x419n5-libcxx-19.1.7/lib -L/nix/store/zqc178w2vh4lkxmy3znl5s2xl7d401nr-compiler-rt-libc-19.1.7/lib -L/nix/store/zqc178w2vh4lkxmy3znl5s2xl7d401nr-compiler-rt-libc-19.1.7/lib -L/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/lib -L/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/lib -L/nix/store/nvss2yn25aqrsri04bxj6izw2gwb65fy-zlib-1.3.1/lib -L/nix/store/nvss2yn25aqrsri04bxj6izw2gwb65fy-zlib-1.3.1/lib -L/nix/store/1y7akdc37r23rhnzkjl97pgk2hljpbka-llvm-16.0.6-lib/lib -L/nix/store/1y7akdc37r23rhnzkjl97pgk2hljpbka-llvm-16.0.6-lib/lib -L/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/lib -L/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/lib -L/nix/store/xdp9yf1r58jzfw1rh68qdhp0d923l07w-libresolv-83/lib -L/nix/store/xdp9yf1r58jzfw1rh68qdhp0d923l07w-libresolv-83/lib -L/nix/store/w2gmrz3ki4lqwb0gw95bjsrwlhknq8ks-libsbuf-14.1.0/lib -L/nix/store/w2gmrz3ki4lqwb0gw95bjsrwlhknq8ks-libsbuf-14.1.0/lib -L/nix/store/jmq7mr51dql3w8y26kzf4j1s62k6mfww-libutil-72/lib -L/nix/store/jmq7mr51dql3w8y26kzf4j1s62k6mfww-libutil-72/lib -L/nix/store/iwf38gi3414279qjycnxccylgshfwr95-libcxx-16.0.6/lib -L/nix/store/iwf38gi3414279qjycnxccylgshfwr95-libcxx-16.0.6/lib -L/nix/store/1qcda50x3ph9md99yx876mq5lkzaq3wk-compiler-rt-libc-16.0.6/lib -L/nix/store/1qcda50x3ph9md99yx876mq5lkzaq3wk-compiler-rt-libc-16.0.6/lib -L/nix/store/9yhjz5n1j4m810q9hqjl3czs2rhvglq1-libffi-39/lib -L/nix/store/9yhjz5n1j4m810q9hqjl3czs2rhvglq1-libffi-39/lib -L/nix/store/v3l2cvzc07qvgfb8647ib3yp7rwcdyk3-gmp-with-cxx-6.3.0/lib -L/nix/store/v3l2cvzc07qvgfb8647ib3yp7rwcdyk3-gmp-with-cxx-6.3.0/lib'
export NIX_LDFLAGS_FOR_TARGET
NIX_NO_SELF_RPATH='1'
export NIX_NO_SELF_RPATH
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
NM_FOR_TARGET='nm'
export NM_FOR_TARGET
OBJCOPY='objcopy'
export OBJCOPY
OBJCOPY_FOR_TARGET='objcopy'
export OBJCOPY_FOR_TARGET
OBJDUMP='objdump'
export OBJDUMP
OBJDUMP_FOR_TARGET='objdump'
export OBJDUMP_FOR_TARGET
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='darwin24.4.0'
PATH='/nix/store/cvhbqa01i5yy7xmmpqp1hbnvq7kpvgsx-clang-wrapper-19.1.7/bin:/nix/store/5hgabdyqh22l57cb3qgx10lcc40d5n9p-clang-19.1.7/bin:/nix/store/d72z8b7fvvcin2p84x7h5s0abkggplzc-coreutils-9.7/bin:/nix/store/k8q0n8py04l07glgsfmvqqyqazxf04mb-cctools-binutils-darwin-wrapper-1010.6/bin:/nix/store/idmz24ps83r9mz2hkxdqwv6y4v2v7x28-cctools-binutils-darwin-1010.6/bin:/nix/store/9y6b0s0z24zvc9mh4khzvk2f83n1ywjw-xcbuild-0.1.1-unstable-2019-11-20-xcrun/bin:/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/bin:/nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev/bin:/nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev/bin:/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5/bin:/nix/store/5p3zbig9h79ha3b8hdg60858pn1z7sm0-llvm-16.0.6/bin:/nix/store/qa6h82fvwcb8d375h95cmv89699yv1qn-llvm-binutils-wrapper-16.0.6/bin:/nix/store/mm7jx9w5m3jg196lqagsj4zqk02mh9y4-llvm-binutils-16.0.6/bin:/nix/store/ldk6y391mx925x8f9vqikvd39adims1g-clang-wrapper-16.0.6/bin:/nix/store/7arrnp78jkqbb10xr9f8wdqh454v1mb2-clang-16.0.6/bin:/nix/store/7x69birl5vvz3kp47hnlnlsnx4xnmcxr-cctools-binutils-darwin-wrapper-1010.6/bin:/nix/store/b96n0hqpih5rb7cxw7cp8d1bwpq3bah5-ghc-9.12.2/bin:/nix/store/y0hk9i00q7i6507mci02vxpw6czqlsnd-haskell-language-server-2.10.0.0/bin:/nix/store/6xzlj57ydrl11yprj5973kzs1r4y7sfs-aeson-pretty-0.8.10/bin:/nix/store/ky9gpqfmd0kj3dmj816bs0sv06bk3lnz-apply-refact-0.15.0.0/bin:/nix/store/2cxyww0g6lz1x8vw5ibdbyj76nafm7s9-cabal-add-0.1/bin:/nix/store/xgmravnisfj8x003r5zdjl7qkkl32fbm-fourmolu-0.18.0.0/bin:/nix/store/alr6b5byv4lx0qysq9h66axpxrbhac3f-ghc-lib-parser-ex-9.12.0.0/bin:/nix/store/cgwv97q98bw2apqlpj9q4msk4vvxbv1l-ghcide-2.10.0.0/bin:/nix/store/h7zf4gfzxdrjjkl51hpsfmahfrzxa0yr-constraints-extras-0.4.0.2/bin:/nix/store/dz0mbn3biqry98b8ya3bqq8s95jipbps-hie-bios-0.14.0/bin:/nix/store/ipkbn99dg81v3bms9xy7ks1sy4z648k7-hiedb-0.6.0.2/bin:/nix/store/ln11lw6p9khzvvm8c9lsq6i95bdqkv2x-lsp-types-2.3.0.1/bin:/nix/store/yf16b99x9s1k7iwmr69bb1va07lylxsz-implicit-hie-0.1.4.0/bin:/nix/store/sa97033r6i5kg1i32d0p3rqmaffaqxrs-hlint-3.10/bin:/nix/store/gvi7pmkxnkqv9k6rvh7iypxnh5vgkjbb-cpphs-1.20.9.1/bin:/nix/store/bqv7l2gdznl9rg8y9xchz5qzl21lyrvc-hscolour-1.25/bin:/nix/store/37sr69pmfvaavslgkgfz4j6p56rap3wb-ormolu-0.8.0.0/bin:/nix/store/9izp8zh9sfyifcz76c6ci3n2v9qyfmc6-shake-0.19.8/bin:/nix/store/jbpyp7mx51n492y6gsp0a9ml6dh449qk-stan-0.2.0.0/bin:/nix/store/fkm8j66iwpkh0619picpkrh0b6p9zy6q-extensions-0.1.0.3/bin:/nix/store/72nw8idlz1kss7sdkyymib5hbbx6992a-pretty-simple-4.1.3.0/bin:/nix/store/mfp90dqhjamsckqmv8ny5lkg3xdnb1ml-hoogle-unstable-2024-07-29/bin:/nix/store/9l0i2ax0gzhfxldfwyca6lyg0yh4y35a-ghci-dap-0.0.25.0/bin:/nix/store/q2nn3dq8nyxaqngmy2s9klb2qiyzfxfx-ghc-9.8.4/bin:/nix/store/rn7yfrfdabpz7sp0fwp31d3aj59fk011-haskell-debug-adapter-0.0.42.0/bin:/nix/store/hiia332kp1bd5418sza831vwrfq69wqi-fsnotify-0.4.2.0/bin:/nix/store/0l157sg7zfmah0azrcam2cqp2qiywcam-hie-bios-0.14.0/bin:/nix/store/wnix6l9mmsalxdv5mz2xq4c173am35k4-fast-tags-2.0.3/bin:/nix/store/mznfcmzvwpx3zymzpqd9mbwd237nii18-alex-3.5.3.0/bin:/nix/store/15p0af2xacrpqrvw4dj9a22aw2385zrm-happy-2.0.2/bin:/nix/store/rk7kswxgh2cbddk5zx2r4ip00isxn8gg-cabal-fmt-0.1.12-bin/bin:/nix/store/w4hzkhd6203fcli3w0al0rnr317bhx1h-fourmolu-0.15.0.0/bin:/nix/store/64r4kfhjlz6h8qwq0j4iby8k84lcx7cf-cabal-install-3.14.2.0/bin:/nix/store/nv1wlbn3im8ny7bbfpmsq79n2dp6xrm3-hlint-3.8/bin:/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109/bin:/nix/store/d72z8b7fvvcin2p84x7h5s0abkggplzc-coreutils-9.7/bin:/nix/store/9gfvy5dd2kp4xf7m3k5gm79dx1mja2lj-findutils-4.10.0/bin:/nix/store/wkgmvs8kl4a0xkr1a1cs9m3hkn07zh5f-diffutils-3.12/bin:/nix/store/3p81h24g11jfcdd7ifql71lr5mjag102-gnused-4.9/bin:/nix/store/6rdq4hg48bmqy7d8da38niai5ngg1x1s-gnugrep-3.11/bin:/nix/store/ip1m0zq8r95z6wbhk6l0k32anw8h4kc7-gawk-5.3.2/bin:/nix/store/0pfs35y6gzcd3bxiybl7vih5yfyv8bcl-gnutar-1.35/bin:/nix/store/29p1y63i1dxqspyrfima6s5ay6525zlf-gzip-1.14/bin:/nix/store/7dvq6aba13kqkvj7ay850s4q806p33vw-bzip2-1.0.8-bin/bin:/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1/bin:/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin:/nix/store/n1i5qvy1jcblq3s1ilnmc83yqcl0l8vk-patch-2.7.6/bin:/nix/store/rmn4csq2fk0scys2d0v6hgkd3yv5fkxj-xz-5.8.1-bin/bin:/nix/store/bpibjj5f5z5p73afivj0ljzbpdgnjbi0-file-5.46/bin'
export PATH
PATH_LOCALE='/nix/store/0ibdk8b6y5khjmjqd08fv1m1nvj86w59-locale-118/share/locale'
export PATH_LOCALE
PS4='+ '
RANLIB='ranlib'
export RANLIB
RANLIB_FOR_TARGET='ranlib'
export RANLIB_FOR_TARGET
READELF_FOR_TARGET='readelf'
export READELF_FOR_TARGET
SDKROOT='/nix/store/w41ks2baj649algkjnbh9746cprrnr1k-apple-sdk-11.3/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
export SDKROOT
SHELL='/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin/bash'
export SHELL
SIZE='size'
export SIZE
SIZE_FOR_TARGET='size'
export SIZE_FOR_TARGET
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRINGS_FOR_TARGET='strings'
export STRINGS_FOR_TARGET
STRIP='strip'
export STRIP
STRIP_FOR_TARGET='strip'
export STRIP_FOR_TARGET
WINDRES_FOR_TARGET='windres'
export WINDRES_FOR_TARGET
XDG_DATA_DIRS=''
export XDG_DATA_DIRS
ZERO_AR_DATE='1'
export ZERO_AR_DATE
__darwinAllowLocalNetworking=''
export __darwinAllowLocalNetworking
__impureHostDeps='/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh'
export __impureHostDeps
__propagatedImpureHostDeps=''
export __propagatedImpureHostDeps
__propagatedSandboxProfile=''
export __propagatedSandboxProfile
__sandboxProfile=''
export __sandboxProfile
__structuredAttrs=''
export __structuredAttrs
_substituteStream_has_warned_replace_deprecation='false'
buildInputs='/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1 /nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev /nix/store/qa6h82fvwcb8d375h95cmv89699yv1qn-llvm-binutils-wrapper-16.0.6 /nix/store/ldk6y391mx925x8f9vqikvd39adims1g-clang-wrapper-16.0.6 /nix/store/b96n0hqpih5rb7cxw7cp8d1bwpq3bah5-ghc-9.12.2 /nix/store/y0hk9i00q7i6507mci02vxpw6czqlsnd-haskell-language-server-2.10.0.0 /nix/store/mfp90dqhjamsckqmv8ny5lkg3xdnb1ml-hoogle-unstable-2024-07-29 /nix/store/9l0i2ax0gzhfxldfwyca6lyg0yh4y35a-ghci-dap-0.0.25.0 /nix/store/rn7yfrfdabpz7sp0fwp31d3aj59fk011-haskell-debug-adapter-0.0.42.0 /nix/store/wnix6l9mmsalxdv5mz2xq4c173am35k4-fast-tags-2.0.3 /nix/store/mznfcmzvwpx3zymzpqd9mbwd237nii18-alex-3.5.3.0 /nix/store/15p0af2xacrpqrvw4dj9a22aw2385zrm-happy-2.0.2 /nix/store/7a0j0niyhlw71qv8ralk64hfg9r7b70q-cabal-fmt-0.1.12 /nix/store/w4hzkhd6203fcli3w0al0rnr317bhx1h-fourmolu-0.15.0.0 /nix/store/64r4kfhjlz6h8qwq0j4iby8k84lcx7cf-cabal-install-3.14.2.0 /nix/store/nv1wlbn3im8ny7bbfpmsq79n2dp6xrm3-hlint-3.8'
export buildInputs
buildPhase='{ echo "------------------------------------------------------------";
  echo " WARNING: the existence of this path is not guaranteed.";
  echo " It is an internal implementation detail for pkgs.mkShell.";
  echo "------------------------------------------------------------";
  echo;
  # Record all build inputs as runtime dependencies
  export;
} >> "$out"
'
export buildPhase
builder='/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs='/nix/store/w41ks2baj649algkjnbh9746cprrnr1k-apple-sdk-11.3'
defaultNativeBuildInputs='/nix/store/53ixhpv90d047y0cyf416sgsqgyqxm1w-update-autotools-gnu-config-scripts-hook /nix/store/jjhw2phnaip4kg0qjas3x3fsaifi8y0w-no-broken-symlinks.sh /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/cmzya9irvxzlkh7lfy6i82gbp0saxqj3-multiple-outputs.sh /nix/store/hxv896faph0rqxjq2ycxpcrbnngc95sz-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/z7k98578dfzi6l3hsvbivzm7hfqlk0zc-set-source-date-epoch-to-latest.sh /nix/store/pilsssjjdxvdphlg2h19p0bfx5q0jzkn-strip.sh /nix/store/cvhbqa01i5yy7xmmpqp1hbnvq7kpvgsx-clang-wrapper-19.1.7'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=()
declare -a envBuildHostHooks=()
declare -a envBuildTargetHooks=()
declare -a envHostHostHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envHostTargetHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envTargetTargetHooks=('bintoolsWrapper_addLDVars' 'ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a fixupOutputHooks=('if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' )
guess='16'
initialPath='/nix/store/d72z8b7fvvcin2p84x7h5s0abkggplzc-coreutils-9.7 /nix/store/9gfvy5dd2kp4xf7m3k5gm79dx1mja2lj-findutils-4.10.0 /nix/store/wkgmvs8kl4a0xkr1a1cs9m3hkn07zh5f-diffutils-3.12 /nix/store/3p81h24g11jfcdd7ifql71lr5mjag102-gnused-4.9 /nix/store/6rdq4hg48bmqy7d8da38niai5ngg1x1s-gnugrep-3.11 /nix/store/ip1m0zq8r95z6wbhk6l0k32anw8h4kc7-gawk-5.3.2 /nix/store/0pfs35y6gzcd3bxiybl7vih5yfyv8bcl-gnutar-1.35 /nix/store/29p1y63i1dxqspyrfima6s5ay6525zlf-gzip-1.14 /nix/store/7dvq6aba13kqkvj7ay850s4q806p33vw-bzip2-1.0.8-bin /nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1 /nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37 /nix/store/n1i5qvy1jcblq3s1ilnmc83yqcl0l8vk-patch-2.7.6 /nix/store/rmn4csq2fk0scys2d0v6hgkd3yv5fkxj-xz-5.8.1-bin /nix/store/bpibjj5f5z5p73afivj0ljzbpdgnjbi0-file-5.46'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs=''
export nativeBuildInputs
out='/Users/hank/Development/hs/puzzel/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/w41ks2baj649algkjnbh9746cprrnr1k-apple-sdk-11.3'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/53ixhpv90d047y0cyf416sgsqgyqxm1w-update-autotools-gnu-config-scripts-hook' '/nix/store/jjhw2phnaip4kg0qjas3x3fsaifi8y0w-no-broken-symlinks.sh' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/cmzya9irvxzlkh7lfy6i82gbp0saxqj3-multiple-outputs.sh' '/nix/store/hxv896faph0rqxjq2ycxpcrbnngc95sz-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/z7k98578dfzi6l3hsvbivzm7hfqlk0zc-set-source-date-epoch-to-latest.sh' '/nix/store/pilsssjjdxvdphlg2h19p0bfx5q0jzkn-strip.sh' '/nix/store/cvhbqa01i5yy7xmmpqp1hbnvq7kpvgsx-clang-wrapper-19.1.7' '/nix/store/k8q0n8py04l07glgsfmvqqyqazxf04mb-cctools-binutils-darwin-wrapper-1010.6' '/nix/store/9y6b0s0z24zvc9mh4khzvk2f83n1ywjw-xcbuild-0.1.1-unstable-2019-11-20-xcrun' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=('/nix/store/rfng4494hxqxjgsamkcd01mzfdp2fwlh-libcxx-19.1.7-dev' '/nix/store/xppzbf3fssn7g35ixgzifkwj54x419n5-libcxx-19.1.7' '/nix/store/sqmzi81xlsf4gk287rnjk7rj4624zy84-compiler-rt-libc-19.1.7-dev' '/nix/store/zqc178w2vh4lkxmy3znl5s2xl7d401nr-compiler-rt-libc-19.1.7' )
declare -a pkgsHostTarget=('/nix/store/wkq7f52a2xq4n24f545wy2fidm4z14f2-gnumake-4.4.1' '/nix/store/7hdwhw0lxassabhsizwlqnnna3l4mj5j-llvm-16.0.6-dev' '/nix/store/nh9z6y7agx6w2lb72bvhwk1rlzp421n2-ncurses-6.5-dev' '/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5' '/nix/store/kslccv8lpcq68f4jfppsx4d0zxmjcmrf-zlib-1.3.1-dev' '/nix/store/nvss2yn25aqrsri04bxj6izw2gwb65fy-zlib-1.3.1' '/nix/store/1y7akdc37r23rhnzkjl97pgk2hljpbka-llvm-16.0.6-lib' '/nix/store/5p3zbig9h79ha3b8hdg60858pn1z7sm0-llvm-16.0.6' '/nix/store/qa6h82fvwcb8d375h95cmv89699yv1qn-llvm-binutils-wrapper-16.0.6' '/nix/store/ldk6y391mx925x8f9vqikvd39adims1g-clang-wrapper-16.0.6' '/nix/store/7x69birl5vvz3kp47hnlnlsnx4xnmcxr-cctools-binutils-darwin-wrapper-1010.6' '/nix/store/b96n0hqpih5rb7cxw7cp8d1bwpq3bah5-ghc-9.12.2' '/nix/store/y0hk9i00q7i6507mci02vxpw6czqlsnd-haskell-language-server-2.10.0.0' '/nix/store/jv0x2pc9bg1wxaqgiff64fhkdgnqv65i-aeson-2.2.3.0' '/nix/store/cs5xp56rdn0aqdb8asc9x87d8pybsfkm-character-ps-0.1' '/nix/store/gz82pmx21m0xifcgaqp9f1jfigv76x4k-data-fix-0.3.4' '/nix/store/kkd1wpvlk2ghi5wnlk61xp9ljdpjbn7y-hashable-1.4.7.0' '/nix/store/ia92liqrqz6wp7azawl2dknnjcpp2xzj-dlist-1.0' '/nix/store/j7sx6zf5crvzic61qj50zcqkmvxqfjq7-generically-0.1.1' '/nix/store/0i5gpkp7lwjqihlcm970w34r2flyjsq7-indexed-traversable-0.1.4' '/nix/store/4vxszv510fzwyg2kpaxn83vykph6sr7p-integer-conversion-0.1.1' '/nix/store/h683qas1sfghfgmfaym8rk7w4i1adh75-primitive-0.9.1.0' '/nix/store/y86qwf09mj58jjvpgsz1vvnk75bldxy4-integer-logarithms-1.0.4' '/nix/store/ilvwxzd6cr3d3rg56idrrqd25v9k8rch-network-uri-2.6.4.2' '/nix/store/5a43cc80m44ljwxwp5xhkmbdp9wygrlj-th-compat-0.1.6' '/nix/store/jwsyv4ib2zzig7smhp3knapgdwf6hf0i-OneTuple-0.4.2' '/nix/store/0mvj2vd9nzra2ryhiqmj40j49q3id4mk-QuickCheck-2.14.3' '/nix/store/26dcpk4jdrwky2h59m1s2wgz9nz97j6f-random-1.2.1.3' '/nix/store/zh35a45smac5xqhfjl0vqhvsw26f2xha-splitmix-0.1.1' '/nix/store/krn10wi9x6a20vy1f1hfyzmvnflwcsg1-scientific-0.3.8.0' '/nix/store/3fvawxhc6bhcrzywsp9frxadaw62gmcb-semialign-1.3.1' '/nix/store/xfdqi31h82bki1baclxwb00agkmzzl6w-indexed-traversable-instances-0.1.2' '/nix/store/1r31lm5jqi69ask7hcv1kmhwfwlm2fjg-tagged-0.8.9' '/nix/store/lkvbi83qxaadg2m9jy6x8zba4ya4gjq8-unordered-containers-0.2.20' '/nix/store/myxc0bjrw9h3vydisqx381w43ac8r6r0-vector-0.13.2.0' '/nix/store/8icyvr8sizgwmsaxlmssda6axbi4ksd6-tasty-1.5.3' '/nix/store/bav60j4rs9m216ka3sz0j0hc7n6lpha7-ansi-terminal-1.1.2' '/nix/store/5b8mwkj219wpb3rxki4r2isxfis9wnkv-ansi-terminal-types-1.1' '/nix/store/7i6q5xih679bhi5xcmpxx95lip21dxzj-colour-2.3.6' '/nix/store/wmdf73z2bf0nyvh4xqrc3rj7hy6x02ws-optparse-applicative-0.18.1.0' '/nix/store/xp9qixdpnbx7pmrypvsms3layvjg5qhb-prettyprinter-1.7.1' '/nix/store/nkf1lznh7n1h0jb9ysxnkbrns7iwvlzr-prettyprinter-ansi-terminal-1.1.3' '/nix/store/17s2bdx8fy58sgdbrn1bpp4d4pjl1kma-transformers-compat-0.7.2' '/nix/store/7xrs0l58bdal5mgrq56b7kpy4nkahx0s-vector-stream-0.1.0.1' '/nix/store/vkksymjscylmv9ynqvs77daic0gw0p83-semigroupoids-6.0.1' '/nix/store/11hadda34lam2dicdxy2c8yyc7pvs50l-base-orphans-0.9.3' '/nix/store/sxbl6vyarpf934b641ahicv97lbcljbl-bifunctors-5.6.2' '/nix/store/y98mvx4h87wndb4i0d243k77xi5mhknf-assoc-1.1.1' '/nix/store/cblzyjq4db12wgbqancazz1w0j1v6mpm-comonad-5.0.9' '/nix/store/gqygmrj9g66k9chscdsmdmnzzkx1bxzq-distributive-0.6.2.1' '/nix/store/0q544yjp132afiirlmy9hdfz21xsq6x0-th-abstraction-0.7.1.0' '/nix/store/v9kj0jq4qh2qydgi1c9d7rlhirwfnp2i-contravariant-1.5.5' '/nix/store/79vjaghsifbhx7753l7s0f0jy6phddr9-StateVar-1.2.2' '/nix/store/9c1hw60zg2f3p6ybdlvz4hwnjwl86f9q-these-1.2.1' '/nix/store/8szf89h22s9mf182lgwv4igvwddxfyrw-strict-0.5.1' '/nix/store/ghsmwwxn5v8x9srfv28zhg6a8k59klgj-text-iso8601-0.1.1' '/nix/store/s872gswgnaqh40v36wjwqnr2xx449qc2-time-compat-1.9.8' '/nix/store/ychlxwlvrxp7qg48224m2v7v5m1ww7i0-text-short-0.1.6' '/nix/store/nk8256qs2qjkqn6amq0id8dj92dpqwnw-uuid-types-1.0.6' '/nix/store/mh3wrixi4mn224pprw1h49159zbzg0p3-witherable-0.5' '/nix/store/6xzlj57ydrl11yprj5973kzs1r4y7sfs-aeson-pretty-0.8.10' '/nix/store/3p8h1wgd5db28zylcsb869hvj1pvhcb8-base-compat-0.13.1' '/nix/store/mn1271w17z2kc5a2jwb70ndhilhvz1pp-attoparsec-0.14.4' '/nix/store/8m0qxxckl3fxiankm0xq8jg4csl57imv-attoparsec-aeson-2.2.2.0' '/nix/store/1ijpqy3qmdql574iz5ja11dvwqya9s5x-cmdargs-0.10.22' '/nix/store/ky9gpqfmd0kj3dmj816bs0sv06bk3lnz-apply-refact-0.15.0.0' '/nix/store/v4dwpka9jcxmfpgqm27nrfsp1gps20ji-data-default-0.7.1.3' '/nix/store/cm9pqrrlqnqn0sb8aakb59fd8gpkxirb-data-default-class-0.1.2.2' '/nix/store/ac4vf3lfnfy2b0gam7jr3fryzwzpbnz4-data-default-instances-containers-0.1.0.3' '/nix/store/xj02v5q6dnjcp32fnfgc23llcds5f1wy-data-default-instances-dlist-0.0.1.2' '/nix/store/jl6az58fy892r5pwf7rg4x4pdqxf5wc9-data-default-instances-old-locale-0.0.1.2' '/nix/store/r3m85qkb441gwkbaag9n701sb5nbvpv2-old-locale-1.0.0.7' '/nix/store/xkakwv8qjyglllad7jrj5ggzia74xh50-extra-1.8' '/nix/store/58va0q62d3n2jbifi057mljd3kjzjvab-clock-0.8.4' '/nix/store/b2acg11zv7f474mbk7yq699djknzrrz2-filemanip-0.3.6.3' '/nix/store/d2qv36g3vn0cdkcdamm162b45j1wg5fy-unix-compat-0.7.4' '/nix/store/mj7lq9alzyzwwrcqz4za2ca0my9bf9vn-ghc-exactprint-1.12.0.0' '/nix/store/j9b8ijy3irlzj05gm20sbiag5jkljhfs-Diff-0.5' '/nix/store/j7hdf83vhp1n14f6z9sha72gancyl2rp-ghc-paths-0.1.0.12' '/nix/store/0i5jrzx58ljvfjy0d5a39796v84752pw-silently-1.2.5.4' '/nix/store/yybn4vf75q012mwc5fk892jya0agbdv5-syb-0.7.2.4' '/nix/store/jqka0czga50g2fng3ja7sp267m669hjf-HUnit-1.6.2.0' '/nix/store/003rb82jdpzh7c5fpgdjms2chfjagifj-call-stack-0.4.0' '/nix/store/mpk0sa207bfznm7gym23g4jb8cx4xbbx-refact-0.3.0.2' '/nix/store/52vjhi12zgg08qrny71arbm2zp9hyr28-uniplate-1.6.13' '/nix/store/8j7zl82h1spnpi9gzcwdd4csnw7l58kg-async-2.2.5' '/nix/store/2cxyww0g6lz1x8vw5ibdbyj76nafm7s9-cabal-add-0.1' '/nix/store/vmqric2cdmxn4c4hfja404i4vm4av533-cabal-install-parsers-0.6.1.1' '/nix/store/v1429xwm3vqyy79yml58kv6d7ya962lv-base16-bytestring-1.0.2.0' '/nix/store/x4czdjpklv9c96kmcqljb31i7d6hwgz3-binary-instances-1.0.6' '/nix/store/180ckyr9iqbblxr5qjagilh49vxprqdk-binary-orphans-1.0.5' '/nix/store/pczj59ryikwh6syljcb8wlxj864xmnhj-case-insensitive-1.2.1.0' '/nix/store/kvs4rg4shg2wggp3a88snh5v60my8997-vector-binary-instances-0.2.5.2' '/nix/store/1f5fh456scq1l3xiyasg9n2m86591s96-cryptohash-sha256-0.11.102.1' '/nix/store/yjqf53ivgx2vbdf1gsskmg6d37jg04bj-lukko-0.1.2' '/nix/store/c80jjjvi9mybcval66z8kc4v9wml6i71-tar-0.6.3.0' '/nix/store/pswz36ljacvqrmaf19sbx4lg97n1h71x-foldl-1.4.18' '/nix/store/k947qhn4xfjk084fr99l0blqfjk9p7ln-profunctors-5.6.2' '/nix/store/xgmravnisfj8x003r5zdjl7qkkl32fbm-fourmolu-0.18.0.0' '/nix/store/iz1v9lnkciagi84cspkwhlzbns6x5nn6-choice-0.2.4.1' '/nix/store/z83pjb43xk1vdg7kbf9h4flgd824ramz-Diff-1.0.2' '/nix/store/dp9sjd0z7zh7mkf0yk2z966c5yvwya0k-file-embed-0.0.16.0' '/nix/store/v4msxm4315ccv0hfbd4bgc2hyhn8bvgn-ghc-lib-parser-9.12.2.20250320' '/nix/store/jiisif06n4r2r4j9v2yy0s3iykm94lml-megaparsec-9.6.1' '/nix/store/f39gc3l814993rk2b4yvr6v5dz9jkwq6-parser-combinators-1.3.0' '/nix/store/5fld4mgks52rv7wh6mnfls7ffbdh9yii-MemoTrie-0.6.11' '/nix/store/0kr5mdbdv1vwhhj63f9ib079gzvnrqdj-newtype-generics-0.6.2' '/nix/store/bbb1l2f5rg18k1v1h14pb08cwjrdzjpd-terminal-size-0.3.4' '/nix/store/3pdqi99kbjni4ymiw12r82mpr2dsgyzl-th-env-0.1.1' '/nix/store/rd6ffkdnxccwf19bipxsyn42ll5gcs4i-unliftio-0.2.25.1' '/nix/store/54l7a5nr1r34d6vv2vn5y3vjyia6sv2w-safe-exceptions-0.1.7.4' '/nix/store/3wmb2l55jh9flxhx2jv95g7jpd28bqbm-unliftio-core-0.2.1.0' '/nix/store/jpas6qn7ws47cgsjj20cwl2n78iaxqxz-yaml-0.11.11.2' '/nix/store/862a5218m3hph7yw6nsnq2m2y0m6c7bp-conduit-1.3.6.1' '/nix/store/39v3js1qlwwhmkq2nivyg7pxsdkp6yky-mono-traversable-1.0.21.0' '/nix/store/gisip91mh3n0nixzh8zbaz5lm8y6jpf5-split-0.2.5' '/nix/store/p3yil22xfnd96pf7cl6zc93m8pyigypq-vector-algorithms-0.9.1.0' '/nix/store/i1jrqw6cn832vwmqamps8m14q66iwcw1-bitvec-1.1.5.0' '/nix/store/cz9ign5jswahsy0xl8y76ipxgb9gl6q1-resourcet-1.3.0' '/nix/store/yqchs4qx7shsgjg5gih8dfpyy6a8bdj1-libyaml-0.1.4' '/nix/store/kayy2mj41lnrmkay5v34cnfacp4p92zx-libyaml-clib-0.2.5' '/nix/store/hz5hpc7cmrshsr0m0slws0157pnmlwfq-fuzzy-0.1.1.0' '/nix/store/6a6z05w81qjlpmlf21mvl4j3gbaa6n8q-monoid-subclasses-1.2.6' '/nix/store/6ril64zzydhgsdl2jd6qhcfyiq10dd6j-commutative-semigroups-0.2.0.2' '/nix/store/mw7xhn2d5cpxccnb8a6bcqmm7w08f4xq-primes-0.2.1.0' '/nix/store/alr6b5byv4lx0qysq9h66axpxrbhac3f-ghc-lib-parser-ex-9.12.0.0' '/nix/store/cgwv97q98bw2apqlpj9q4msk4vvxbv1l-ghcide-2.10.0.0' '/nix/store/lsz3376bi08ivabdsqj62yv7z68id6ps-co-log-core-0.3.2.5' '/nix/store/5wj99g48fb9l1z6659nkd0lqmaiqjgxw-cryptohash-sha1-0.11.101.0' '/nix/store/gifwqbzvn0kd359j1qym39m8ggi64g5x-dependent-map-0.4.0.0' '/nix/store/h7zf4gfzxdrjjkl51hpsfmahfrzxa0yr-constraints-extras-0.4.0.2' '/nix/store/s4n6c9s3319xs6b5mk14d8xvgni8axxz-constraints-0.14.2' '/nix/store/i6di8nrs56v658vyhm2hy23885vg0gg5-boring-0.2.2' '/nix/store/4hc5n44ck16yy329wdwbkmly0d828y51-dependent-sum-0.7.2.0' '/nix/store/lxb0xwj1b331jlii9lj2j07rgdswcrxs-some-1.0.6' '/nix/store/w6jiqjfz8mp33l43cnpwy429syjm0qfa-enummapset-0.7.3.0' '/nix/store/phz3ph36bh01n71lgq76f7abkdnpwpgi-fingertree-0.1.5.0' '/nix/store/g0c1hn0mprgg3wi3d44rgms2d0hd168m-focus-1.0.3.2' '/nix/store/s70ahzbry1gk7j5jxdr2c0vqaa1fks21-ghc-trace-events-0.1.2.10' '/nix/store/jbx6sljss0xnxxrz3qk869v563bpbmx9-Glob-0.10.2' '/nix/store/dz0mbn3biqry98b8ya3bqq8s95jipbps-hie-bios-0.14.0' '/nix/store/kx57wcj9xnynx6hfc4vlbzcadzg7hhk7-conduit-extra-1.3.7' '/nix/store/nr7gjpl7wlq82k87fs2r1015l7lbfbsv-network-3.2.7.0' '/nix/store/97qfnl77v123yqw7x4gcsixi28hzfqnx-streaming-commons-0.2.3.0' '/nix/store/ns6zdxs1n28p4l0bac6z03m05lji8bs1-zlib-0.7.1.0' '/nix/store/zhx6y242v7s1y8cxazsaw4y6a5smrk90-typed-process-0.2.13.0' '/nix/store/h2gxy7kp9km4gy5g510p21glfpan5ky0-temporary-1.3' '/nix/store/5gm0srx08sz4xg76zjxgh1sjvxibbg23-hie-compat-0.3.1.2' '/nix/store/ipkbn99dg81v3bms9xy7ks1sy4z648k7-hiedb-0.6.0.2' '/nix/store/ma23z0fnyh4mdchbigr6lbaak85ijxvd-algebraic-graphs-0.7' '/nix/store/ji4a6kf0ycr9n06wvp5xh8fix8y31xjh-lucid-2.11.20250303' '/nix/store/b8cizcxjjk5nkw6b2dglz382m8aj5gmx-blaze-builder-0.4.2.3' '/nix/store/ysrcz0i65fjnyfb52093gjh8andrwcza-mmorph-1.2.0' '/nix/store/qc5dn82hrybrxg4dbxj1x1vpaq434xvg-sqlite-simple-0.4.19.0' '/nix/store/5if0kxzg5bpzqzgzdss5651r747mq4vj-blaze-textual-0.2.3.1' '/nix/store/r8si0xjxfhwhw1ndw1xk6bgrxmnznkhl-direct-sqlite-2.3.29' '/nix/store/v6jnxawpcwkymqyv7hxdi4j72ngqb3p7-Only-0.1' '/nix/store/waal9biwy8kwrq9mz5is0zrlw7cybk69-hls-graph-2.10.0.0' '/nix/store/imr7pipdgc5msr3kws4p6ina2k99v2jp-js-dgtable-0.5.2' '/nix/store/9hn80yry8wic0j3x9cvh44xbzhqi781j-js-flot-0.8.3' '/nix/store/0ysc0siqcznybg0mna4g296pr243knlv-js-jquery-3.3.1' '/nix/store/4y6yj6mgibxjq7yg22s2lhbsmq2n0dli-list-t-1.0.5.7' '/nix/store/vssak7s3v3wbmxrv3a4livipiy0rcyal-logict-0.8.2.0' '/nix/store/pwzs7y4819l34sb538f26ihzbwlshbij-monad-control-1.0.3.1' '/nix/store/anbzk0wm1xr844hwgz4hzwsf9h8c9w8w-transformers-base-0.4.6' '/nix/store/czhn4l57zgwhr8ixmhk4rj9vrp4r059s-stm-containers-1.2.1.1' '/nix/store/hvp993j9cv9rr2vc0gnqkir1vr999w4z-deferred-folds-0.9.18.7' '/nix/store/qyk0i330iyl2j92sgkx4swy0jw6r92rf-stm-hamt-1.2.1.1' '/nix/store/ki9wi14qrrv6b4ryf4bvs8yx65mxbxba-primitive-extras-0.10.2.2' '/nix/store/ycg282jxp2305n5mcb7n5k71daazbaav-cereal-0.5.8.3' '/nix/store/bxymwjai0csigprg9nvsz1ws9ngpcrsq-primitive-unlifted-2.1.0.0' '/nix/store/mnbxx6cglq9ahwcdancvqr5iilqsmclm-hls-plugin-api-2.10.0.0' '/nix/store/p4d981yncr0h73p8w9nl5vzg148mkw25-hw-fingertree-0.1.2.1' '/nix/store/615kg6yl9fkbxhbq4fc3dfrajl3dsc9b-hw-prim-0.6.3.2' '/nix/store/65di3lk7mpbi883dr9gb1d1s27wxv917-mmap-0.5.9' '/nix/store/3bimhjymfqs0l1sn0kg0ilji2c3x5abn-lens-5.3.4' '/nix/store/w1wf8hr69djzyhppf4p9chilq2kb6p9h-free-5.2' '/nix/store/96r7cnjmjnr59bxakrn6y7w61qpjygi3-kan-extensions-5.2.6' '/nix/store/x317qwmv9q4b4lf7cj3n935z07jmf3ms-adjunctions-4.4.3' '/nix/store/vc5isyc1v7z16vax1ywa9adl6vp3kvyw-semigroups-0.20' '/nix/store/2c2pgnq3mh5wy713nc8lnlf2rf27pcr6-void-0.7.3' '/nix/store/bvv84s2k5p94c2ycvh2qismz7bdgs4fw-invariant-0.6.4' '/nix/store/6gfspfda6cfa4gwng3z7yjigkixdy64f-parallel-3.2.2.0' '/nix/store/85yr748l8fagn5bkbk58mf2p2w90mhmg-reflection-2.1.9' '/nix/store/fvnq13d7047w1pk7mw9ph641y2n9522f-lens-aeson-1.2.3' '/nix/store/cb4as7kvkwi85pdwgi8cz48jzzkki2yz-lsp-2.7.0.1' '/nix/store/ln11lw6p9khzvvm8c9lsq6i95bdqkv2x-lsp-types-2.3.0.1' '/nix/store/rq2bin6ngg0k1p3y0cdvyszf1hldqdj0-generic-arbitrary-1.0.1.2' '/nix/store/lihjmzk8y099c0809vfwkyi9vpaxhdi4-mod-0.2.0.1' '/nix/store/ia2751kgsis0dj552jkv2dkmdjvfwkbx-semirings-0.7' '/nix/store/24kjj44sbqc837q619v6y57ibnyaw1y4-quickcheck-instances-0.3.32' '/nix/store/zwilcr4nv52550kl4vass9w5z82n0x7p-old-time-1.1.0.4' '/nix/store/10422r3dg62aismnhgdidvcb5f82mzdb-row-types-1.0.1.2' '/nix/store/bbcm90fb8g1378ahfyyx3nq06q8525k4-generic-lens-2.2.2.0' '/nix/store/7miam55l8g6k09ncnk46pfag0rzan48d-generic-lens-core-2.2.1.0' '/nix/store/s8msxxy19g5s9dhzn5bd25k034547mpn-indexed-profunctors-0.1.1.1' '/nix/store/93axi2q3b0j77k1bsbl4cxi687nbcrl9-safe-0.3.21' '/nix/store/0hwn5pr31rdmzlyf629x0bayl4d8193r-regex-1.1.0.2' '/nix/store/mm2pdswqwj0mcrqfv5h8cjwff3gkrd44-regex-base-0.94.0.3' '/nix/store/p0xvxmkym4p77gi1lc6lmfwkqblf8g3a-regex-pcre-builtin-0.95.2.3.8.44' '/nix/store/46hg01cdgwwa3i4lxkicj9ip3iwjmm9k-regex-tdfa-1.3.2.3' '/nix/store/ykmhzrjzfqwqa6z24i6md89is1lnjxk7-time-locale-compat-0.1.1.5' '/nix/store/671y0znhgnwy4ib9kmvwiri7sbs4np40-utf8-string-1.0.2' '/nix/store/61w3xzmmlkqy1yi42aj6gjc8b3n5kwfh-sorted-list-0.2.3.1' '/nix/store/97cx5bmcpl13l8qzcjqmg67y18vxzh44-text-rope-0.2' '/nix/store/wddf6wsqkbmsbzy0cyklw0i6gaa34dfk-opentelemetry-0.8.0' '/nix/store/yf16b99x9s1k7iwmr69bb1va07lylxsz-implicit-hie-0.1.4.0' '/nix/store/m5dhdkb35ik9mzs93nf9xhx033l26qp0-filepattern-0.1.3' '/nix/store/ys20sdqnhhv4i0mnq67wgafx2d8jc35s-gitrev-1.3.1' '/nix/store/8vih1fvy0j5g9b2afq4wa8grrbb5qq93-githash-0.1.7.0' '/nix/store/sa97033r6i5kg1i32d0p3rqmaffaqxrs-hlint-3.10' '/nix/store/gvi7pmkxnkqv9k6rvh7iypxnh5vgkjbb-cpphs-1.20.9.1' '/nix/store/38sbikzcsjcqzyg5lbdzm6md69nwvwqm-polyparse-1.13' '/nix/store/9rxd9hgnwlnsmm28vc19sdzy31piw150-deriving-aeson-0.2.10' '/nix/store/bqv7l2gdznl9rg8y9xchz5qzl21lyrvc-hscolour-1.25' '/nix/store/d4p6d0v58lq79kx6hqjl5whjl3c1qgwq-hls-test-utils-2.10.0.0' '/nix/store/vpz7rb0mcyddvlwlhw0p8mcn76bmb4bk-lsp-test-0.17.1.1' '/nix/store/y1380v1c7v5m9lya4xpff285ywbn1222-conduit-parse-0.2.1.1' '/nix/store/3s7ikh9g7bals2gx0hwx15nzbskk9z5v-parsers-0.12.12' '/nix/store/mykbhnz9w5k2ywh4xhl5bxj81rwnc7hr-charset-0.3.12' '/nix/store/86gggl8hq2xfjkd2hklxmpcm9lr5cqbc-neat-interpolation-0.5.1.4' '/nix/store/9krwi9gdi0nl9fc860vsq2kw3anwss0v-tasty-expected-failure-0.12.3' '/nix/store/8alnq9zbk8pavvpipkhcv12nccc5g1zf-unbounded-delays-0.1.1.1' '/nix/store/0z8ih429bl9gh31ydzfv0m88s3l3905b-tasty-golden-2.3.5' '/nix/store/iwb973xm55a73py15kzb38z4r6s5r10c-tasty-hunit-0.10.2' '/nix/store/yifiggqkikkym3wcwh9cghi7pshk4p0d-tasty-rerun-1.1.20' '/nix/store/g02xzyr75lqddxiz7y877qbmwxad33wp-optparse-simple-0.1.1.4' '/nix/store/37sr69pmfvaavslgkgfz4j6p56rap3wb-ormolu-0.8.0.0' '/nix/store/dxkjcy2hq8rbw7lkf5y2fql4wdsv9m0v-process-extras-0.7.4' '/nix/store/zg3ifvqqc4jx7kc2bixmv5fp1alpmjlg-generic-deriving-1.14.6' '/nix/store/f2qxb2payx78y46xpr82hglc58vx47lz-ListLike-4.7.8.3' '/nix/store/aiw0vx5raqs027l48anljj474wb2q8p0-fmlist-0.9.4' '/nix/store/j7mqr4p1a51b32kx057xan17pfijibx0-regex-applicative-0.3.4' '/nix/store/g55qwkwyf3sv1srkydqj9wmhfdx04zjx-filtrable-0.1.6.0' '/nix/store/9izp8zh9sfyifcz76c6ci3n2v9qyfmc6-shake-0.19.8' '/nix/store/3wgqih6qqva97afjn17smwrga2wa1q4i-heaps-0.4.1' '/nix/store/jbpyp7mx51n492y6gsp0a9ml6dh449qk-stan-0.2.0.0' '/nix/store/1w3v4i2w8qs4qsjsi0wgqmjd759x8m13-base64-1.0' '/nix/store/4p8c8rc39b6h3aacif2l0ydvsc9vijjn-blaze-html-0.9.2.0' '/nix/store/l46fjg75vkmx3bznxzmn4jjymn1h2xx1-blaze-markup-0.8.3.0' '/nix/store/qd9glqmnjgd8rvjr0qzawm6nq0m0pzyw-clay-0.15.0' '/nix/store/hd3y497a4p8q36xzds7gmzpn5dpyq7r7-colourista-0.1.0.2' '/nix/store/jkc7kbxdbdsni608kl8cj2w8j38iry9n-dir-traverse-0.2.3.0' '/nix/store/fkm8j66iwpkh0619picpkrh0b6p9zy6q-extensions-0.1.0.3' '/nix/store/dgsn8la32k8xd4an26rx9xyr1kcwyjg4-microaeson-0.1.0.2' '/nix/store/c9k4g26i8rh6ahhs93r2b9dmi51zn7h6-fail-4.9.0.0' '/nix/store/72nw8idlz1kss7sdkyymib5hbbx6992a-pretty-simple-4.1.3.0' '/nix/store/n381nbx9fyl7l0zmwcj0z189hg98xigz-relude-1.2.2.0' '/nix/store/2r5ik2bcjmnvay5kc160vxfpg0wg21zw-slist-0.2.1.0' '/nix/store/dl6xg1007lf841jj08rkc0irfziicr1b-tomland-1.3.3.3' '/nix/store/s6vbd736gzrs0632z9b2dhlj3l96r5xh-validation-selective-0.2.0.0' '/nix/store/7mqlghlyb2xfr6cwsi3k1m2kbyxlxw7b-selective-0.7.0.1' '/nix/store/wy2syyldrv3ls6m833mcayd74bif0nq3-trial-0.0.0.0' '/nix/store/rkrlkpqs7h40l18aqmbc3hkj8q0l68bd-trial-optparse-applicative-0.0.0.0' '/nix/store/vz9p3cl6mwzcpfac0qa0da5nbdln2q6a-trial-tomland-0.0.0.0' '/nix/store/mfp90dqhjamsckqmv8ny5lkg3xdnb1ml-hoogle-unstable-2024-07-29' '/nix/store/mzxfpr26q4g1j0pidgf2bzgw6k2jd9nq-aeson-2.2.3.0' '/nix/store/p4k6jhpmdf77yggnd7rhww1a5nlgd2nb-character-ps-0.1' '/nix/store/h3x071zj4rrjpfj9cydp97xqg7gz1wxj-data-fix-0.3.4' '/nix/store/a3lm6fpxk5f92n4jz3fpqxppyslkvpw7-hashable-1.4.7.0' '/nix/store/cqzy4sf6ww34c9m7arpcsc5107a3sfqa-os-string-2.0.7' '/nix/store/xjkslgr8ryvfm9hijzfmyavlj4jg46hm-dlist-1.0' '/nix/store/ryhh3j80k9z1nbnqz49il080njp149ap-generically-0.1.1' '/nix/store/dfy3gxpy4m2mjs5kfq8q4v6gbzvbx8rn-indexed-traversable-0.1.4' '/nix/store/2gwx9i4biqamn56ys98x46fs2hf54hjx-integer-conversion-0.1.1' '/nix/store/yss7fwhjcw8m6zpiydnjbz1vpq7zi87q-primitive-0.9.1.0' '/nix/store/pad9zdl5zbbahhy7zkqq70w5kz9x1a47-integer-logarithms-1.0.4' '/nix/store/q8skr6af2m8f8p8xjqxzf06xs6md5sv5-network-uri-2.6.4.2' '/nix/store/g9xgny1yzi3lffw777nyp5b9z3zi98aa-th-compat-0.1.6' '/nix/store/b4nq0vlr3r736nm5b97l60cdgf56qhai-OneTuple-0.4.2' '/nix/store/hzhgyl3m3ksxjvwfhv2cr7nldbpydiri-QuickCheck-2.14.3' '/nix/store/2s33wpw0h9pfdk3ic9air6xq7byd2lc2-random-1.2.1.3' '/nix/store/7qcv85mihzypjq2wir4rfihplx6gf6f4-splitmix-0.1.1' '/nix/store/panflkawinn10jmzif7w34kpnq6a72lf-scientific-0.3.8.0' '/nix/store/isk4v322ym444l0615wly7mn4r7aw7l9-semialign-1.3.1' '/nix/store/8m10q81mvmvzswv10m8n7z2r6lclw20f-indexed-traversable-instances-0.1.2' '/nix/store/x82ivrbqdsc707y9hp7316k8qv8li34m-tagged-0.8.8' '/nix/store/xlsi3y9q328mrvbrm7j28kjsicm3kqzq-unordered-containers-0.2.20' '/nix/store/7qknp9wwfsnyh08924fkzks9i8i2mklx-vector-0.13.2.0' '/nix/store/crdb9s1mgqvn0ap3hngzh598xg0flgbs-tasty-1.5.3' '/nix/store/1aw1zryb5qhknaiy2w0fmsidqmaylflq-ansi-terminal-1.1.2' '/nix/store/zlg5nfccs6q715x9gjpipjndkl1wc1iv-ansi-terminal-types-1.1' '/nix/store/iwawaj4z4kvbb2r0h7n6j1fmsdgh49z9-colour-2.3.6' '/nix/store/mkljlbgpdfzhnqxl8m5915cnqhbj1z08-optparse-applicative-0.18.1.0' '/nix/store/l1m5xlgni4hjhpvpxxqkcyw857qzrkd7-prettyprinter-1.7.1' '/nix/store/w0k6h35yvfjfzrlca7an5qd02vyr6db2-prettyprinter-ansi-terminal-1.1.3' '/nix/store/1h575972zhl3lszb1nxigba2ll31hvdz-transformers-compat-0.7.2' '/nix/store/ra2xshnwsacyczsqkf44njja9hy8dfv6-vector-stream-0.1.0.1' '/nix/store/dvbp9bviwmw7d2c94q502gx5x45mjzkr-semigroupoids-6.0.1' '/nix/store/8m1ciibvagzv91vbdjzx6qc8ay36p0km-base-orphans-0.9.3' '/nix/store/57si0ad4l91li46cqcxfjrdw4bhgpw8l-bifunctors-5.6.2' '/nix/store/jhqdv8y1l997bzc4pyinv6ryz7jhx2bc-assoc-1.1.1' '/nix/store/f54gs2dad6jbx1h9llq0qn838q96b4v8-comonad-5.0.9' '/nix/store/zjx6i92900zs2k3zy34392x8yqvfis01-distributive-0.6.2.1' '/nix/store/vzy2sa6y4h1rb2c0xsa72rgzh99awi6q-th-abstraction-0.7.1.0' '/nix/store/k70lqfnixfjgi77pmkbaajp75whc9ii3-contravariant-1.5.5' '/nix/store/6nsv9a9f64dm2qk57sw2d7llf7svz8km-StateVar-1.2.2' '/nix/store/1ps01d9plkjgh2jcg2v1s8cbnrgldkbd-these-1.2.1' '/nix/store/ipq6kxiwaa7hfhsn5x77x55sx0pka371-strict-0.5.1' '/nix/store/iv7gl31lnxj61sx6hxzwq9gpryn4nwfb-text-iso8601-0.1.1' '/nix/store/wrjr25gdnb2i9gnjxh0i97zys9am88qn-time-compat-1.9.7' '/nix/store/82n942w2y4hwwdynxll9bzir2z3nnbyn-text-short-0.1.6' '/nix/store/c9lp4fi9g5blghci3xln6jvcscn3qknk-uuid-types-1.0.6' '/nix/store/5c1hy9vvva43r1nxj42m60cnzrh1r5vl-witherable-0.5' '/nix/store/kalyqr99nbj3zwi72r7pqf6d4ydhc2ip-blaze-html-0.9.2.0' '/nix/store/9j0jh707x2gs7lhw1hrbx6ngkz47fim6-blaze-builder-0.4.2.3' '/nix/store/spk2jmpzg5q6xmhlckgckr8j0w3fka75-blaze-markup-0.8.3.0' '/nix/store/nsmhwgh9p9hjji0rzaa65zzz4s0p9v2y-cmdargs-0.10.22' '/nix/store/6yxyc2dn4rrfyjbzahgn9mjd5ysfra5z-conduit-1.3.6.1' '/nix/store/74hid2g3711fpvjxx8w353a8plw6j2vy-mono-traversable-1.0.21.0' '/nix/store/0h1s8m1xdp8a6sygsjrjrh11dim53bi9-split-0.2.5' '/nix/store/hva9c1747wi1p14c8rpzqa3zfc80g89d-vector-algorithms-0.9.1.0' '/nix/store/fmjr83i2p8k98lpq3y04zxd34k2ndkcx-bitvec-1.1.5.0' '/nix/store/xmxfd4fkfzp7xiyjdmprjm24ijg6pn7s-resourcet-1.3.0' '/nix/store/l94wxb4f5rc4zrg1b6adqb4qpq51i20z-unliftio-core-0.2.1.0' '/nix/store/rrb5v0nxvlglmxf19n7b6mki2f6ci3cz-conduit-extra-1.3.7' '/nix/store/5b772k2wsc4h9xd5rkia48qim7mh1l4x-async-2.2.5' '/nix/store/6k2xrk2w9kc9ax1im9f2ks6ah6dh3xcm-attoparsec-0.14.4' '/nix/store/lmdarmmjn1bps10yw55rgqzpzd979djr-network-3.2.7.0' '/nix/store/w6ykg2icbslz1bzaqy2awn31m12drjmm-streaming-commons-0.2.3.0' '/nix/store/im7k2ycc3ipxzy5fyhna43i3pmqxi14m-zlib-0.7.1.0' '/nix/store/syi32kvsxks2cxib52lhrz0izx8hw6f4-typed-process-0.2.13.0' '/nix/store/p8yx38h30107q17lb6nc64njc3c05haa-crypton-connection-0.4.4' '/nix/store/k395qxbcg7hngrvk8yzqqil5b6dk1sw0-crypton-x509-store-1.6.10' '/nix/store/sk6z5lzhr02ld3brlbvdxyfvfpm4pkxi-asn1-encoding-0.9.6' '/nix/store/wmpl49pcmqsfcisgm1ssxys60zxbi8pz-asn1-types-0.3.4' '/nix/store/wsckljblqnnl3xxwk15cic634zhfjx9h-hourglass-0.2.12' '/nix/store/d1v7x10d1jp4w6k7j9qkjvfn413rn44i-memory-0.18.0' '/nix/store/2hyv5gh9yh4c0wnla638aqf3adqpfg4i-basement-0.0.16' '/nix/store/dp89az2hczdh8ssfbdnvsv9rzr1j7qf3-crypton-1.0.4' '/nix/store/b3fzjw1pcn10pppwz15dq2nam261skgx-crypton-x509-1.7.7' '/nix/store/566jv3rhk6y1hzjaydjnm4zarym3hklv-asn1-parse-0.9.5' '/nix/store/73nxlrsh9d734h81alfjlrayqm6ffill-pem-0.2.4' '/nix/store/7mzdk6b41znqza9mwaf0zyf5sgcjpbfr-crypton-x509-system-1.6.7' '/nix/store/mfzy460fmqwv7jym3m9lvkay3bshhc66-data-default-0.7.1.3' '/nix/store/wdzr345zgkcv08dvsar159cg6i45nfbj-data-default-class-0.1.2.2' '/nix/store/ac0ynjnv2psg927g22g7fdn8na0vbbr5-data-default-instances-containers-0.1.0.3' '/nix/store/jk1gv50q3l0xra2622dqvlx6s7z4k95q-data-default-instances-dlist-0.0.1.2' '/nix/store/9l4r1f1pzdw6p9agrf8ysy2kf7ni4s2p-data-default-instances-old-locale-0.0.1.2' '/nix/store/4fcg2h11i1knb2my1ym8k75ifm675wgx-old-locale-1.0.0.7' '/nix/store/yfpqqdzqn55bm470cfs9mi1qlzfcs3p5-socks-0.6.1' '/nix/store/4qf0ppj1cn4mwd8ngbw816hw4kf5i4x5-cereal-0.5.8.3' '/nix/store/g163gyjr79fmr1jyqg8aixggn0h1rajr-tls-2.1.1' '/nix/store/0nmpbfvhb77849mjljq8v2vjhfqw0dda-base16-bytestring-1.0.2.0' '/nix/store/wjszpsdr8nl16c32z2faz6micna4lh2w-crypton-x509-validation-1.6.14' '/nix/store/h8fg8zdr9g1qj81465b5j520qsaqknw3-iproute-1.7.15' '/nix/store/4da763wkna0mlr6m68bkx9hi19nyav9s-appar-0.1.8' '/nix/store/lap8dl93h9j9zi728ba4yw3cqp314q5n-byteorder-1.0.4' '/nix/store/n8apdn79pppprrj1rnq965vqwvbxsw2g-serialise-0.2.6.1' '/nix/store/dh4q4gc0zg04p1zydrkcs023c5fcfshq-cborg-0.2.10.0' '/nix/store/zhjsjzr7a5c8rnqscxmi287pvz3hzzx3-half-0.3.2' '/nix/store/hppcgzg87x9hfyxmdb220cj9acdml25y-unix-time-0.4.16' '/nix/store/9nq9dq1nb1xrbxngyjv90a9pn9q7qfkf-old-time-1.1.0.4' '/nix/store/3fn070m8v3xwzvcjgavr6z12yzmy7cb6-extra-1.7.16' '/nix/store/7k7fjk2xlg8i38ig5pnw5kd7nyic752r-clock-0.8.4' '/nix/store/g1j4dcp8vbi14a4sl9ff13y53bk98g2x-foundation-0.0.30' '/nix/store/6jjmy2cz0rwxzwx0sccz82svs692d7sj-haskell-src-exts-1.23.1' '/nix/store/qxsdp0snd85zqwc8s6wnbpn507z5vymm-http-conduit-2.3.9.1' '/nix/store/16ib68p6j8m3ipj12jmj0crbywjw77mb-attoparsec-aeson-2.2.2.0' '/nix/store/wf2aalx7fcvk1r6ks3w580jvz9b0igbi-http-client-0.7.19' '/nix/store/5xnk706a0pdbzsz0pxs2zlqw3nkf6xlk-base64-bytestring-1.2.1.0' '/nix/store/p4xdd7mihyzrwdxap87bk06y96ww514q-case-insensitive-1.2.1.0' '/nix/store/x7872rw6bvlss6ndr0j9vn482i9c63i1-cookie-0.5.1' '/nix/store/j5rcfhxjbchhzvbpg2hbskwlz8viwigy-http-types-0.12.4' '/nix/store/29ka1fsp7qizhg0nbbrwwf8h25yk5izd-mime-types-0.1.2.0' '/nix/store/xfjr4y79j2r4pwwdlspq513fhajzl82h-http-client-tls-0.3.6.4' '/nix/store/q4fw2ch4nampg7c3s5wnkwawqi5s5lsz-js-flot-0.8.3' '/nix/store/hn3wm8almh35wpfz26vx6i3273f6chnl-js-jquery-3.3.1' '/nix/store/liadhk92p6hjkd18m37gv7i2a50pwn4q-mmap-0.5.9' '/nix/store/d1cmyrzxf6qsw668r961zcj564vdp03m-process-extras-0.7.4' '/nix/store/5b2i8g5b201cqdc8nd16j8p4bncrc442-generic-deriving-1.14.6' '/nix/store/5cwlpg5j2frlrnkcng67qgchx8w0azq5-ListLike-4.7.8.3' '/nix/store/3cawgq1m0w6b32k5rf6asw20s19gb226-fmlist-0.9.4' '/nix/store/sqfy353p1842l3sjsi5xf8bg92hi5kaf-utf8-string-1.0.2' '/nix/store/f02qgywx9q9ihbkm7jw6wdjn9kag9q9f-safe-0.3.21' '/nix/store/1brnc62yz524f4akbb3n4qi196rspa65-storable-tuple-0.1' '/nix/store/4jpc1ijkm6by8hv78j1d84shwh5dyxwf-storable-record-0.0.7' '/nix/store/a9ildj7p9vbqd9g11bnwllqx00q067hl-semigroups-0.20' '/nix/store/d08y8q4n77wfnsddb52rs1jfqqxl8rf9-utility-ht-0.0.17.2' '/nix/store/9zssgm1qrvh65cfdzmnwragyr1kir55a-tar-0.6.3.0' '/nix/store/wdiaw8pfnky96nyrdj3qf2qylll1bi4y-uniplate-1.6.13' '/nix/store/nk1s31q7hakmk6xwr3i97i7407d73cjb-syb-0.7.2.4' '/nix/store/8qi4hzj2izcvk7i14yryb9318s25pfjl-wai-3.2.4' '/nix/store/b809dcw788ql4vvgpgpswxpsja94sw54-vault-0.3.1.5' '/nix/store/5ix3w5hc7a3km1y89f45l0a2gi9myar4-wai-logger-2.5.0' '/nix/store/3vyh1l5hhwvjwsh19j2m15fxcbjlgppp-fast-logger-3.2.5' '/nix/store/9jyfb6mibmfjd80ildr0ydlblfsfscik-auto-update-0.2.6' '/nix/store/jh0asphf7ivcrva8r0wnpzz5z1ni2r0d-easy-file-0.2.5' '/nix/store/7zjrn3w104i3cqjl6zaxibwlajh4b5p1-unix-compat-0.7.4' '/nix/store/wnhds600k9qnk2y6ddsw7znhffi8j2ng-warp-3.4.7' '/nix/store/by2jlllgb9csnlx0j5kv93lzpbh8hhh8-bsb-http-chunked-0.0.0.4' '/nix/store/cd61zcgblcnymlli7swwqf669lkfigz3-http-date-0.0.11' '/nix/store/x4imr51bl8nz1ll27xswvcw9d4v5lsqm-http2-5.3.9' '/nix/store/icll5bpwc15v7yas55g5xp73l7s57ghw-http-semantics-0.3.0' '/nix/store/l80hyws59jzw6413sg5zqbn9l382kg2n-network-byte-order-0.1.7' '/nix/store/k5i83kizl2xanh6v5zjivdhsprkqykx0-time-manager-0.2.2' '/nix/store/539pq0vpwixhlfpd2jd1x8sagv4v8j30-network-control-0.1.6' '/nix/store/hig96i81pavs446pwagsyqdgc8g2a190-psqueues-0.2.8.1' '/nix/store/r3ghq0sd5i790clrdcw85y91fkghljlc-recv-0.1.0' '/nix/store/r0rhl8dgckimr1d4p3y83ysky660j70b-simple-sendfile-0.2.32' '/nix/store/86vhyrhaawa0da38v2wpaxvlwddxp9ji-word8-0.1.3' '/nix/store/0w393fj4v0z2qvim0qchd34fhhgzxc78-warp-tls-3.4.9' '/nix/store/p3z0i16x6x6wnmlx00252ywp3rd7hp21-tls-session-manager-0.0.8' '/nix/store/v5q23l713j2y4z3hz5pibxmr5x402479-crypto-token-0.1.2' '/nix/store/a43x7nc26d89nmj6nfiqx3v6y40h6ji4-unliftio-0.2.25.1' '/nix/store/qh8d7ph6l23na49y12liqznw732bxd7n-safe-exceptions-0.1.7.4' '/nix/store/9l0i2ax0gzhfxldfwyca6lyg0yh4y35a-ghci-dap-0.0.25.0' '/nix/store/q2nn3dq8nyxaqngmy2s9klb2qiyzfxfx-ghc-9.8.4' '/nix/store/95x5wijihjbjm2wa86ca1hy6zcykqhyi-ghc-paths-0.1.0.12' '/nix/store/bqblxranvlrshkfab95mcg5za3z76rb4-haskell-dap-0.0.16.0' '/nix/store/rn7yfrfdabpz7sp0fwp31d3aj59fk011-haskell-debug-adapter-0.0.42.0' '/nix/store/hiia332kp1bd5418sza831vwrfq69wqi-fsnotify-0.4.2.0' '/nix/store/4p096hwwaqgkhcl319ckf7hyrr0m8x7m-hfsevents-0.1.8' '/nix/store/5jcg9cd55r4p7wn2irhbvj3jqazcjnlp-monad-control-1.0.3.1' '/nix/store/gl54j3mjak4d1idggfmm1m7jllsldxpv-transformers-base-0.4.6' '/nix/store/4gw8p7d104r717kfipcn24sz6622a9cd-monad-logger-0.3.42' '/nix/store/4q57bb45nkhdmmbzgrvhh4n4vrl6fjgl-lifted-base-0.2.3.12' '/nix/store/0fcybldsmcr78y13qxbaspxahqkblg14-monad-loops-0.4.3' '/nix/store/l7yfiqaamh80x0pm4239s20bpwxncplc-stm-chans-3.0.0.9' '/nix/store/7kd3xs3555060r6h1c7nax4cqrqjwimv-retry-0.9.3.1' '/nix/store/4r5sx9a3268xkpsgbzwcnn12xifiras9-mtl-compat-0.2.2' '/nix/store/sswib55nry8q57w2r6zrjcckipd2q1c4-string-interpolate-0.3.4.0' '/nix/store/p0yi4sahr1jq2rmg0dngxpyyiw4saxik-haskell-src-meta-0.8.15' '/nix/store/f1wv2cra7wrjhf7ikqcmkfzzhdpq5hlv-th-orphans-0.13.16' '/nix/store/pgr3mdh04h3dgmwrwhmq6kximm8vrh84-th-lift-0.8.6' '/nix/store/5jwjjzq465axd7pvy7kjg2jrmf3zl843-th-reify-many-0.1.10' '/nix/store/9damxclw58id8jrmnb8ck3c1v2dz7x2d-th-expand-syns-0.4.12.0' '/nix/store/vm3fw37n1i5cklrsr7w4rkagnmfd7hhh-text-conversions-0.3.1.1' '/nix/store/d76lm2sly6hn66kladns6blzjdzbzxh3-temporary-1.3' '/nix/store/0l157sg7zfmah0azrcam2cqp2qiywcam-hie-bios-0.14.0' '/nix/store/1gfxz55jav4m7872nk0v1svvg4b3kl5c-co-log-core-0.3.2.5' '/nix/store/qpxdk77yvqsz04x3cw7v1c5r8p0m1gd8-cryptohash-sha1-0.11.101.0' '/nix/store/kwmwx9klnfvb2c7hshjsazv3arqlcj0x-file-embed-0.0.16.0' '/nix/store/h2qja19lzn8wqhhi2vavyqkg2cl4n4a9-yaml-0.11.11.2' '/nix/store/vm18ndk59m2i9b9wg2w6rkn75q0r0gmc-libyaml-0.1.4' '/nix/store/4r19pr91krllczsvxr7i28w06lz0cd5m-libyaml-clib-0.2.5' '/nix/store/y5fa462f3iglmwg4kdnycl53x4s9dkyb-hslogger-1.3.1.2' '/nix/store/wg16q1mkmdbz2971zkvg9lnn8gql3rc8-network-bsd-2.8.1.0' '/nix/store/8qp84nxsz2jkrbrsq2j510092kklznzz-lens-5.3.4' '/nix/store/dfavky02zn29rdi4lafk4k4kifa16xj8-call-stack-0.4.0' '/nix/store/01sl6wzi53akd63icd5caipmmc5wzsm4-free-5.2' '/nix/store/v2f020ibv79varrhff6ag7hjpd6vsjy3-profunctors-5.6.2' '/nix/store/mysvqxf5q33s83mrw8i4cgb4i07zwfhp-kan-extensions-5.2.6' '/nix/store/wbvx3gg9p9k45yz4ly1n0fbsxqpgjgii-adjunctions-4.4.3' '/nix/store/238sn5jq5z406s880ri6d2vf21b9znmm-void-0.7.3' '/nix/store/4f45v8hsiml2975kr47q0sfmlcciaj2j-invariant-0.6.4' '/nix/store/wqm46xdwlbiy3jnk1msjp187p0vgpcl0-parallel-3.2.2.0' '/nix/store/4b8hkdlhriff0y3w340wds5zlmkmp8ys-reflection-2.1.9' '/nix/store/wnix6l9mmsalxdv5mz2xq4c173am35k4-fast-tags-2.0.3' '/nix/store/mznfcmzvwpx3zymzpqd9mbwd237nii18-alex-3.5.3.0' '/nix/store/15p0af2xacrpqrvw4dj9a22aw2385zrm-happy-2.0.2' '/nix/store/7a0j0niyhlw71qv8ralk64hfg9r7b70q-cabal-fmt-0.1.12' '/nix/store/rk7kswxgh2cbddk5zx2r4ip00isxn8gg-cabal-fmt-0.1.12-bin' '/nix/store/w4hzkhd6203fcli3w0al0rnr317bhx1h-fourmolu-0.15.0.0' '/nix/store/l48vv7x1vzaxdh4617801nrzj3hkv8sk-Diff-0.5' '/nix/store/g857n15yngsi946p8rw6h692g5bd1pii-ghc-lib-parser-9.8.5.20250214' '/nix/store/gxq4bqxn96hyh5i5v6jpi2hhrg8924lj-megaparsec-9.7.0' '/nix/store/jvn7rbgnfc1hg0069gknw9qcq1zxhhjw-parser-combinators-1.3.0' '/nix/store/yp475yfmww074zjcpnzh9xvasxhw0zhs-MemoTrie-0.6.11' '/nix/store/l2qf9akaivkarks8i95ngr8rjjp8qkyj-newtype-generics-0.6.2' '/nix/store/vhbc2vpjxfz20ncp9p00dbb14phyd4iz-th-env-0.1.1' '/nix/store/64r4kfhjlz6h8qwq0j4iby8k84lcx7cf-cabal-install-3.14.2.0' '/nix/store/nv1wlbn3im8ny7bbfpmsq79n2dp6xrm3-hlint-3.8' '/nix/store/w41ks2baj649algkjnbh9746cprrnr1k-apple-sdk-11.3' '/nix/store/m3l5s4b1v7l2hs9dm73i76cx6acry77k-libiconv-109-dev' '/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109' '/nix/store/l676klylkdmxgx3dff5qx6r6j596lpvx-libresolv-83-dev' '/nix/store/xdp9yf1r58jzfw1rh68qdhp0d923l07w-libresolv-83' '/nix/store/zn828prnxazgd5xaqhzn9f8dxfvadkgg-libsbuf-14.1.0-dev' '/nix/store/w2gmrz3ki4lqwb0gw95bjsrwlhknq8ks-libsbuf-14.1.0' '/nix/store/jmq7mr51dql3w8y26kzf4j1s62k6mfww-libutil-72' '/nix/store/zgrs0am3a5avl3jmjsjlph8d4r17wq6j-cups-headers-2.4.11' )
declare -a pkgsTargetTarget=('/nix/store/rsli1jzy7fb6g1gxqlshs7xln5mlkbd5-libcxx-16.0.6-dev' '/nix/store/iwf38gi3414279qjycnxccylgshfwr95-libcxx-16.0.6' '/nix/store/q06j84vr1sfvf215as7xqzcflah5i764-compiler-rt-libc-16.0.6-dev' '/nix/store/1qcda50x3ph9md99yx876mq5lkzaq3wk-compiler-rt-libc-16.0.6' '/nix/store/3578d0cacv8qb9mfp8na803svifqllrg-ncurses-6.5' '/nix/store/9yhjz5n1j4m810q9hqjl3czs2rhvglq1-libffi-39' '/nix/store/v3l2cvzc07qvgfb8647ib3yp7rwcdyk3-gmp-with-cxx-6.3.0' '/nix/store/fhza62gkyw0mp1h2zls6pl1832zjjf26-libiconv-109' )
declare -a postFixupHooks=('noBrokenSymlinksInAllOutputs' '_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preferLocalBuild='1'
export preferLocalBuild
prefix='/Users/hank/Development/hs/puzzel/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
shell='/nix/store/8ivrpmp3arvxbr6imdwm2d28q9cjsqvi-bash-5.2p37/bin/bash'
export shell
shellHook=''
export shellHook
stdenv='/nix/store/d8302dk9mnwh4z2f10ybs6i24smf15jp-stdenv-darwin'
export stdenv
strictDeps=''
export strictDeps
stripDebugFlags='-S'
system='aarch64-darwin'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    while IFS='' read -r varName; do
        nixTalkativeLog "@${varName}@ -> ${!varName}";
        args+=("--subst-var" "$varName");
    done < <(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }')
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        nixTalkativeLog "calling implicit '$hookName' function hook";
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            nixTalkativeLog "sourcing implicit '$hookName' script hook";
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                nixTalkativeLog "evaling implicit '$hookName' string hook";
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -r --preserve=mode,timestamps --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                ( XZ_OPT="--threads=$NIX_BUILD_CORES" xz -d < "$fn";
                true ) | tar xf - --mode=+w --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --mode=+w --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin Applications Library/Frameworks};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_logHook ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    local hookKind="$1";
    local hookExpr="$2";
    shift 2;
    if declare -F "$hookExpr" > /dev/null 2>&1; then
        nixTalkativeLog "calling '$hookKind' function hook '$hookExpr'" "$@";
    else
        if type -p "$hookExpr" > /dev/null; then
            nixTalkativeLog "sourcing '$hookKind' script hook '$hookExpr'";
        else
            if [[ "$hookExpr" != "_callImplicitHook"* ]]; then
                local exprToOutput;
                if [[ ${NIX_DEBUG:-0} -ge 5 ]]; then
                    exprToOutput="$hookExpr";
                else
                    local hookExprLine;
                    while IFS= read -r hookExprLine; do
                        hookExprLine="${hookExprLine#"${hookExprLine%%[![:space:]]*}"}";
                        if [[ -n "$hookExprLine" ]]; then
                            exprToOutput+="$hookExprLine\\n ";
                        fi;
                    done <<< "$hookExpr";
                    exprToOutput="${exprToOutput%%\\n }";
                fi;
                nixTalkativeLog "evaling '$hookKind' string hook '$exprToOutput'";
            fi;
        fi;
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_nixLogWithLevel ()
{
 
    [[ -z ${NIX_LOG_FD-} || ${NIX_DEBUG:-0} -lt ${1:?} ]] && return 0;
    local logLevel;
    case "${1:?}" in 
        0)
            logLevel=ERROR
        ;;
        1)
            logLevel=WARN
        ;;
        2)
            logLevel=NOTICE
        ;;
        3)
            logLevel=INFO
        ;;
        4)
            logLevel=TALKATIVE
        ;;
        5)
            logLevel=CHATTY
        ;;
        6)
            logLevel=DEBUG
        ;;
        7)
            logLevel=VOMIT
        ;;
        *)
            echo "_nixLogWithLevel: called with invalid log level: ${1:?}" >&"$NIX_LOG_FD";
            return 1
        ;;
    esac;
    local callerName="${FUNCNAME[2]}";
    if [[ $callerName == "_callImplicitHook" ]]; then
        callerName="${hookName:?}";
    fi;
    printf "%s: %s: %s\n" "$logLevel" "$callerName" "${2:?}" >&"$NIX_LOG_FD"
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        nixTalkativeLog "sourcing setup hook '$pkg'";
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        nixTalkativeLog "sourcing setup hook '$pkg/nix-support/setup-hook'";
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget="check";
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget="test";
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray checkFlags=VERBOSE=y checkFlagsArray checkTarget;
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
concatStringsSep ()
{
 
    local sep="$1";
    local name="$2";
    local type oldifs;
    if type=$(declare -p "$name" 2> /dev/null); then
        local -n nameref="$name";
        case "${type#* }" in 
            -A*)
                echo "concatStringsSep(): ERROR: trying to use concatStringsSep on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                local IFS="$(printf '\036')"
            ;;
            *)
                local IFS=" "
            ;;
        esac;
        local ifs_separated="${nameref[*]}";
        echo -n "${ifs_separated//"$IFS"/"$sep"}";
    fi
}
concatTo ()
{
 
    local -;
    set -o noglob;
    local -n targetref="$1";
    shift;
    local arg default name type;
    for arg in "$@";
    do
        IFS="=" read -r name default <<< "$arg";
        local -n nameref="$name";
        if [[ -z "${nameref[*]}" && -n "$default" ]]; then
            targetref+=("$default");
        else
            if type=$(declare -p "$name" 2> /dev/null); then
                case "${type#* }" in 
                    -A*)
                        echo "concatTo(): ERROR: trying to use concatTo on an associative array." 1>&2;
                        return 1
                    ;;
                    -a*)
                        targetref+=("${nameref[@]}")
                    ;;
                    *)
                        if [[ "$name" = *"Array" ]]; then
                            nixErrorLog "concatTo(): $name is not declared as array, treating as a singleton. This will become an error in future";
                            targetref+=(${nameref+"${nameref[@]}"});
                        else
                            targetref+=(${nameref-});
                        fi
                    ;;
                esac;
            fi;
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
        if [ -z "${dontPatchShebangsInConfigure:-}" ]; then
            patchShebangs --build "$configureScript";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        concatTo flagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    concatTo flagsArray distFlags distFlagsArray distTarget=dist;
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        { 
            install -m 0600 /dev/null "$NIX_BUILD_TOP/env-vars" && export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars"
        } || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case " ${!varSlice-} " in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w,u-s,g-s "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs[*]:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords "${propagatedUserEnvPkgs[@]}" > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        runPhase "$curPhase";
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "apple-sdk-11.3: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_@wrapperName@_TARGET_BUILD_@suffixSalt@=1
        ;;
        0)
            export NIX_@wrapperName@_TARGET_HOST_@suffixSalt@=1
        ;;
        1)
            export NIX_@wrapperName@_TARGET_TARGET_@suffixSalt@=1
        ;;
        *)
            echo "apple-sdk-11.3: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
            concatTo flagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray installCheckTarget=installcheck;
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
    concatTo flagsArray makeFlags makeFlagsArray installFlags installFlagsArray installTargets=install;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
nixChattyLog ()
{
 
    _nixLogWithLevel 5 "$*"
}
nixDebugLog ()
{
 
    _nixLogWithLevel 6 "$*"
}
nixErrorLog ()
{
 
    _nixLogWithLevel 0 "$*"
}
nixInfoLog ()
{
 
    _nixLogWithLevel 3 "$*"
}
nixLog ()
{
 
    [[ -z ${NIX_LOG_FD-} ]] && return 0;
    local callerName="${FUNCNAME[1]}";
    if [[ $callerName == "_callImplicitHook" ]]; then
        callerName="${hookName:?}";
    fi;
    printf "%s: %s\n" "$callerName" "$*" >&"$NIX_LOG_FD"
}
nixNoticeLog ()
{
 
    _nixLogWithLevel 2 "$*"
}
nixTalkativeLog ()
{
 
    _nixLogWithLevel 4 "$*"
}
nixVomitLog ()
{
 
    _nixLogWithLevel 7 "$*"
}
nixWarnLog ()
{
 
    _nixLogWithLevel 1 "$*"
}
noBrokenSymlinks ()
{
 
    local -r output="${1:?}";
    local path;
    local pathParent;
    local symlinkTarget;
    local -i numDanglingSymlinks=0;
    local -i numReflexiveSymlinks=0;
    local -i numUnreadableSymlinks=0;
    if [[ ! -e $output ]]; then
        nixWarnLog "skipping non-existent output $output";
        return 0;
    fi;
    nixInfoLog "running on $output";
    while IFS= read -r -d '' path; do
        pathParent="$(dirname "$path")";
        if ! symlinkTarget="$(readlink "$path")"; then
            nixErrorLog "the symlink $path is unreadable";
            numUnreadableSymlinks+=1;
            continue;
        fi;
        if [[ $symlinkTarget == /* ]]; then
            nixInfoLog "symlink $path points to absolute target $symlinkTarget";
        else
            nixInfoLog "symlink $path points to relative target $symlinkTarget";
            symlinkTarget="$(realpath --no-symlinks --canonicalize-missing "$pathParent/$symlinkTarget")";
        fi;
        if [[ $symlinkTarget != "$NIX_STORE"/* ]]; then
            nixInfoLog "symlink $path points outside the Nix store; ignoring";
            continue;
        fi;
        if [[ $path == "$symlinkTarget" ]]; then
            nixErrorLog "the symlink $path is reflexive";
            numReflexiveSymlinks+=1;
        else
            if [[ ! -e $symlinkTarget ]]; then
                nixErrorLog "the symlink $path points to a missing target: $symlinkTarget";
                numDanglingSymlinks+=1;
            else
                nixDebugLog "the symlink $path is irreflexive and points to a target which exists";
            fi;
        fi;
    done < <(find "$output" -type l -print0);
    if ((numDanglingSymlinks > 0 || numReflexiveSymlinks > 0 || numUnreadableSymlinks > 0)); then
        nixErrorLog "found $numDanglingSymlinks dangling symlinks, $numReflexiveSymlinks reflexive symlinks and $numUnreadableSymlinks unreadable symlinks";
        exit 1;
    fi;
    return 0
}
noBrokenSymlinksInAllOutputs ()
{
 
    if [[ -z ${dontCheckForBrokenSymlinks-} ]]; then
        for output in $(getAllOutputNames);
        do
            noBrokenSymlinks "${!output}";
        done;
    fi
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    concatTo patchesArray patches;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        concatTo flagsArray patchFlags=-p1;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update=false;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f" || [ "$oldInterpreterLine" ];
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                [[ "$args" == *" "* ]] && args=${args#* } || args=;
                newPath="$(PATH="${!pathName}" type -P "env" || true)";
                args="-S $(PATH="${!pathName}" type -P "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" type -P "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" type -P "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
runPhase ()
{
 
    local curPhase="$*";
    if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
        return;
    fi;
    showPhaseHeader "$curPhase";
    dumpVars;
    local startTime endTime;
    startTime=$(date +"%s");
    eval "${!curPhase:-$curPhase}";
    endTime=$(date +"%s");
    showPhaseFooter "$curPhase" "$startTime" "$endTime";
    if [ "$curPhase" = unpackPhase ]; then
        [ -n "${sourceRoot:-}" ] && chmod +x -- "${sourceRoot}";
        cd -- "${sourceRoot:-.}";
    fi
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    echo "Running phase: $phase";
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    printf "@nix { \"action\": \"setPhase\", \"phase\": \"%s\" }\n" "$phase" >&"$NIX_LOG_FD"
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -printf '%D-%i,%p\0' | sort -t, -k1,1 -u -z | cut -d, -f2- -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    if ! [[ "${#fileNames[@]}" -gt 0 ]]; then
        echo "substituteInPlace called without any files to operate on (files must come before options!)" 1>&2;
        return 1;
    fi;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        local replace_mode="$1";
        case "$1" in 
            --replace)
                if ! "$_substituteStream_has_warned_replace_deprecation"; then
                    echo "substituteStream() in derivation $name: WARNING: '--replace' is deprecated, use --replace-{fail,warn,quiet}. ($description)" 1>&2;
                    _substituteStream_has_warned_replace_deprecation=true;
                fi;
                replace_mode='--replace-warn'
            ;&
            --replace-quiet | --replace-warn | --replace-fail)
                pattern="$2";
                replacement="$3";
                shift 3;
                if ! [[ "${!var}" == *"$pattern"* ]]; then
                    if [ "$replace_mode" == --replace-warn ]; then
                        printf "substituteStream() in derivation $name: WARNING: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                    else
                        if [ "$replace_mode" == --replace-fail ]; then
                            printf "substituteStream() in derivation $name: ERROR: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                            return 1;
                        fi;
                    fi;
                fi;
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream() in derivation $name: ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream() in derivation $name: ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream() in derivation $name: ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    concatTo srcsArray srcs;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/y94v4ak3jgmfl1lmwqafmnia0snmgvag-gnu-config-2024-01-01/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    [[ $path == -* ]] && path="./$path";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ "%p"\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "${shellHook:-}"
